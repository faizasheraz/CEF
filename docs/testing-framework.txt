Testing Framework
------------------

Create an experimentation framework (API) with a .config file (like omnet maybe) focusing on amazon
but can be extended to other clouds.

spawns specific number of vms etc
should be able to pick traffic profiles(types of traffic) and generate between vms in different order like mesh etc
calculates latency between vms
gets hop count between them
generates traffic in a mesh or the way specified
saves results in different forms like tcpdump etc. creates a log file dumpfile

---------------------------------------------------------------------------------
Questions:

what is the significance of this experimentation framework?

PITA
It facilitated writing tests for the system. It saved the testers from doing mundane repeteative tasks of creating ports etc
for each test. so that testers can actually focus on test content rather than on execution of other stuff like launching vms etc

Experimentation framework
It will abstract researchers from details of individual APIs for interacting with specific clouds and with mundane stuff like
launching vms, terminating them, generating traffic etc. Each test could be run on different platforms. so that researchers can focus on actual tests.

(Researchers will not have to focus of different types of traffic generation, traffic monitoring etc. will be provided by the framework.
Could be used by the researchers in testing different network configurations.)

users will specify the virtual infrastructure needed in the .config file and it will be automatically 
generated by the framework. (maybe add routing functionality between instances so that network topologies
like FAT tree and clos can be made) then users can select traffic profiles between the vms.
and run traffic tests.



config file
-------------

spawning of vms:

TypeofVM=small/micro/large
numOfVM=5
vm=vm1 { type=small
          region=
          ami=
}

Tests:

Ping test between two
TCP session between two
UDP session between two

Ping test from 1 to all
TCP session between 1 to all
UDP session between 1 to all
 
Ping test in mesh
TCP session in mesh
UDP session in mesh


Calculate latency between vms
get hop count between vms

ping [list src addresses] [list destination addresses]
craftedtcp packets [list src addresses] [list destination addresses] [burst length] [rate]
crafted udp traffic [list src addresses] [list destination addresses] [burst length] [rate]
calculate bandwidth throughput?? [src][dst]
calculate average latency [src][dst]
capture packets??
tcp session through some tool

dumpfilename=

-----------------------------------

breakdown
------------

parser to parse config file -- should be extendable
spawn vms
Run respective tests on vms
Save the results in result file

classes:-
Base:
-------
VM
 - spawn_vm
 - terminate_vm
 - start_vm
 - stop_vm
Traffic

VM for aws - derived from VM
VM from local -derived from VM

-----------

there should be a vm (handle) with returns all info about the vm e.g. ip address etc and how to access it. etc etc
 its security group may be too
 
 AMI handling
 Security groups
  

dev points
------------
- exception handling

